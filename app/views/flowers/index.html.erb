<% if user_signed_in? %>
  <h3><%= current_user.name %>のページ</h3>
<% end %>
<% if current_user.try(:admin?) %>
  <h1>Flowers_admin</h1>
<% else %>
  <h1>Flowers</h1>
<% end %>

<%= render 'search', q: @q, url: flowers_path %>

<table>
  <thead>
    <td>
      <div id='map'></div>
      <style>
        #map {
          height: 300px;
          width: 300px;
        }
      </style>
      <script>

      let map;
      let marker = [];
      let infoWindow = [];
      // コントローラーで定義したインスタンス変数(@flowers)を代入
      let markerData = gon.flowers; 
      
      function initMap() {
        // マップの初期化
        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 15,
          center: {lat: 35.4550426, lng: 139.6312741}
        });

        // @flowersの数だけ繰り返し処理を行い、マーカーと吹き出しを複数表示させる
        for (var i = 0; i < markerData.length; i++) {
          console.log(i);
          let id = markerData[i]['id']
          
          // 各スポットの緯度経度を算出
          console.log(markerData[i]['latitude']);
          markerLatLng = new google.maps.LatLng({
            lat:  Number(markerData[i]['latitude']),
            lng:  Number(markerData[i]['longitude'])
          });
          console.log(typeof markerData[i]['latitude']);

          // 各スポットのマーカーを作成
          marker[i] = new google.maps.Marker({
            position: markerLatLng,
            map: map
          });
          
          // 各スポットの吹き出しを作成
          infoWindow[i] = new google.maps.InfoWindow({
            // 吹き出しの内容
            content: `<a href='/flowers/${ id }'>${ markerData[i]['name'] }</a>`
          });
          
          // マーカーにクリックイベント追加
          markerEvent(i);
        }
        map_adjust();
      }

      // マーカーをクリックしたら吹き出しを表示
      function markerEvent(i) {
        marker[i].addListener('click', function () {
          infoWindow[i].open(map, marker[i]);
        });
        
      }

      function map_adjust(){
        var latMin = 90;  //緯度は-90～90の値
        var latMax = -90;
        var lngMin = 180;  //経度は-180～180の値
        var lngMax = -180;

        if (markerData.length == 1){
          map = new google.maps.Map(document.getElementById('map'), {
            center: {
              lat: gon.flower.latitude,
              lng: gon.flower.longitude
            },
          });

        }else{
          console.log("else");
          for (var i = 0; i < markerData.length; i++) {
            var thisLat = markerData[i]['latitude'];
            var thisLng = markerData[i]['longitude'];
            latMin = Math.min(latMin, thisLat);  //最小経度
            latMax = Math.max(latMax, thisLat);  //最大経度
            lngMin = Math.min(lngMin, thisLng);  //最小緯度
            lngMax = Math.max(lngMax, thisLng);  //最大緯度
              
            var min = new google.maps.LatLng(latMin, lngMin);  //最小緯度経度（南西）
            var max = new google.maps.LatLng(latMax, lngMax);  //最大緯度経度（北東）
            var latLngBounds = new google.maps.LatLngBounds(min, max);
            //マーカーが全て地図に収まるように調整
            map.fitBounds(latLngBounds);  
          }
        }
      }
      </script>

      <script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API_KEY'] %>&callback=initMap" async defer></script>
      </td>
    <tr>
      <th>投稿者</th>
      <th>Name</th>
      <th>Description</th>
      <th>Image</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @flowers.each do |flower| %>
      <tr>
        <td><%= flower.user.name %></td>
        <td><%= flower.name %></td>
        <td><%= flower.description %></td>
        <td><% if flower.image.attached? %>
          <%= image_tag flower.image.variant(resize_to_limit: [200, 200]) %>
        <% end %></td>
        <td><%= link_to 'Show', flower %></td>
        <td><%= link_to 'Edit', edit_flower_path(flower) %></td>
        <td><%= link_to 'Destroy', flower, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Flower', new_flower_path %>
